%!

% 72 dots per inch
/inch {72 mul} def

% how big is each square?
/sqr_size 0.25 inch def

% font size is calculated based on square size
/font_size 0.5 sqr_size mul def

% margin size in all directions
/margin 1 inch def

% size of a letter page
/width 8.5 inch def
/height 11 inch def

% right and top edges (accounting for margin
/right width margin sub def
/top height margin sub def

% draw a square on the screen. (x, y) is the bottom left corner
% square: x y -> ---
/square {
    newpath
    % x and y  are already on the stack!
    moveto
    sqr_size 0 rlineto
    0 sqr_size rlineto
    sqr_size neg 0 rlineto
    closepath
    stroke
} def

% print a character inside a box. (x, y) is the bottom left corner
% of the box
% print_char: char x y -> ---
/print_char {
    newpath
    % char x y -> char
    moveto

    % Move closer to the center by 1/4 the square size
    % TODO: actually center this with stringwidth
    sqr_size 0.25 mul
    dup rmoveto

    % char is on top of stack
    show
} def

% color_by_numbers: image -> ---
/show_image {
    % start the first row at 1 margin from the bottom
    /y margin def
    % array of arrays is already on the stack
    {
        % start the column number at 1 margin from the
        /x margin def
        % array is already on the stack
        {
            % character is already on the box
            1 string cvs x y print_char
            x y square

            % increment the column position
            /x x sqr_size add def
        } forall

        % increment the row position
        /y y sqr_size add def
    } forall
} def

% Set the font for writing
/Helvetica findfont
font_size scalefont
setfont

% Put the numbers for the image below:
% (The following is generated by Python!)
